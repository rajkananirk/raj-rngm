@model CP_RequirementDetailVm
@inject IConfiguration Configuration

@{
    ViewData["Title"] = @Model.JobTitleText;
    

    var siteKey = Configuration.GetSection("GoogleRecaptchaV3").GetSection("Sitekey").Value ?? "";
}

@await Html.PartialAsync("_RenderSections")

@{
    var date = Model.RequirementJob.RequirementOpenDate.HasValue ?
    Model.RequirementJob.RequirementOpenDate.Value : Model.RequirementJob.ModifiedDate.HasValue ? Model.RequirementJob.ModifiedDate.Value : Model.RequirementJob.CreatedDate;
}

<!-- Job details content section code starts -->
<section class="job-details-section">
    <div class="container-fluid">
        <div class="job-details-block">
            <div class="row">
                <div class="col-xl-8 col-lg-6">
                    <div class="job-list-title">
                        @Model.JobTitleText
                    </div>
                    <div class="job-catg">
                        <img src="~/imgs/job-catg.svg" alt="" title="">
                        @(!string.IsNullOrWhiteSpace(Model.RequirementJob.CategoryName) ? Model.RequirementJob.CategoryName : "-")
                    </div>
                    <div class="job-location">
                        <img src="~/imgs/map.svg" alt="" title="">
                        @Model.RequirementJob.Location
                    </div>
                    <div class="job-type">
                        <img src="~/imgs/buildings.svg" alt="" title="">
                        @(!string.IsNullOrWhiteSpace(Model.RequirementJob.RemoteOptionTypeName) ? Model.RequirementJob.RemoteOptionTypeName : "-")
                    </div>
                </div>
                <div class="col-xl-4 col-lg-6">
                    <div class="job-share-posted">
                        <span class="share"><img src="~/imgs/job-share.svg" alt="" title=""> Share</span>
                        <span class="mx-2">|</span>
                        <span class="posted">Posted On: @date.ToString("MM/dd/yyyy") </span>
                    </div>
                    <div class="job-duration">

                        <img src="~/imgs/clock.svg" alt="" title="">
                        @Utilities.FormatedDuaration(Model.RequirementJob.RequirementDuration, Model.RequirementJob.JobTypeText)
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-12">
                    <a onclick="quickApply()" href="javascript:void(0)" class="btn-primary text-decoration-none" type="button">Quick Apply</a>
                    <img class="ms-3" src="~/imgs/information.svg"
                         alt="" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-html="true" title="<p><b>Quick apply:</b> Just provide your contact information and resume to apply for this job.</p> <p><b>Log in and apply:</b> Log in or create an account to tell us more about yourself before applying.</p> <p>After applying, a job expert will get in contact regarding the next steps.</p>" />
                </div>
            </div>
        </div>

        <div class="job-summary-block">
            <div class="job-details-summary">
                <div class="row">
                    <div class="col-lg-6">
                        <h2>Job Summary</h2>
                        <p>
                            Job title: <span>
                                @Model.RequirementJob.JobTitleText
                            </span>
                        </p>
                        <p>
                            Category: <span>
                                @Model.RequirementJob.CategoryName
                            </span>
                        </p>
                        <p>
                            Posted date: <span>
                                @date.ToString("MM/dd/yyyy")
                            </span>
                        </p>
                        <p>
                            Duration: <span>
                                @Utilities.FormatedDuaration(Model.RequirementJob.RequirementDuration, Model.RequirementJob.JobTypeText)
                            </span>
                        </p>
                        <p>
                            Shift(s): <span>
                                @if (Model.RequirementShiftTimings != null && Model.RequirementShiftTimings.Any())
                                {
                                    foreach (var shift in Model.RequirementShiftTimings)
                                    {
                                        @: @shift.RequirementShiftTimingFrom - @shift.RequirementShiftTimingTo   @shift.TimeZoneCode <br />
                                    }
                                }
                                else
                                {
                                    @: -
                                }
                            </span>
                        </p>
                        <p>
                            Pay Rate: <span>
                                @Model.RequirementJob.PayRateToCandidate @Model.RequirementJob.PayRateToCandidateCurrencyCode @Model.RequirementJob.PayRateTypeText.FormatPayrateText()
                            </span>
                        </p>
                    </div>
                    <div class="col-lg-6 text-lg-end">
                        <p>Talk to our account manager <img class="ms-1" src="~/imgs/information.svg" alt="" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-html="true" title="<p>Our job experts at TalentArbor will help you land a job and answer any questions you may have about our process.</p> <p>They work closely with hiring managers at our partner companies to help them find the talent they need.</p>" /></p>
                        <p>
                            Name: <span>
                                @Model.AccountManagerDetails.DisplayUserName
                            </span>
                        </p>
                        <p>
                            Email: <span>
                                <a href="mailto:@(Model.AccountManagerDetails.UserEmail)">
                                    @Model.AccountManagerDetails.UserEmail
                                </a>
                            </span>
                        </p>
                        <p>
                            Phone: <span>
                                @(Model.AccountManagerDetails.PhoneNumber != null ? Model.AccountManagerDetails.PhoneNumber : "N/A")
                            </span>
                        </p>
                    </div>
                </div>
            </div>
            <div class="skills-needed mt-4">
                <p>Skills Needed</p>

                @if (!string.IsNullOrEmpty(Model.RequirementJob.Skills))
                {

                    var values = @Model.RequirementJob.Skills.Split(',');
                    <ul>
                        @for (int i = 0; i < values.Length - 1; i++)
                        {
                            <li>@values[i]</li>
                        }
                    </ul>
                }


            </div>
            <div class="description-block mt-4">
                <p>Description</p>

                @Html.Raw(Model.RequirementJob.RequirementJobDescription)
            </div>
            @if (Model.RequirementVideoFiles != null)
            {
                <div class="videos-block mt-4">
                    <p>Video information on this job</p>
                    <div class="row">
                        <div class="col-md-3">

                            @foreach (var i in Model.RequirementVideoFiles)
                            {
                                if (i.FileExtension == null || i.FileExtension == "")
                                {

                                    @if (i.FileExtension.Contains("youtube"))
                                    {
                                        <iframe width="100%" height="182"
                                                frameborder="0"
                                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen
                                                src="@i.FileName">
                                        </iframe>
                                    }
                                    else
                                    {
                                        <video controls width="100%" height="182" class="img-thumbnail">
                                            <source src="@i.FileName" type="video/mp4">
                                            Your browser does not support the video tag.
                                        </video>
                                    }
                                }
                                else
                                {
                                    <video width="100%" height="182" controls>
                                        <source src="~/jobdocs/@i.FileName" type="video/mp4">
                                    </video>
                                }
                            }

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>
<!-- Job details content section code ends -->

<div class="modal fade" id="mdQuickAppy" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form enctype="multipart/form-data" id="frmQuickApply" method="post" asp-action="QuickApply" asp-controller="Jobseeker" asp-antiforgery="true">

                <input type="hidden" name="googleCaptcha" id="googleCaptcha" value="" />
                <input type="hidden" name="googleCaptchaAction" id="googleCaptchaAction" value="Quick_Apply" />
                <input name="RequirementID" id="RequirementID" type="hidden" value="@Model.RequirementID" />

                <div class="modal-header">
                    <h2 class="modal-title" id="staticBackdropLabel">Quick Apply</h2>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body"> 

                    <div class="col-12 mt-2">
                        <p><small><span class="red">*</span> Indicates a required field</small></p>
                    </div>


                    <div class="col-12 mt-2">
                        <label for="Passcode" class="form-label">First Name <span class="required">*</span></label>
                        <input type="text" name="FirstName" class="form-control" id="FirstName">
                    </div>

                    <div class="col-12 mt-2">
                        <label for="LastName" class="col-form-label">Last Name<span class="text-danger">*</span></label>
                        <input type="text" name="LastName" class="form-control" id="LastName">
                    </div>

                    <div class="col-12 mt-2">
                        <label for="Email" class="col-form-label">Email<span class="text-danger">*</span></label>
                        <input type="text" name="Email" class="form-control" id="Email">
                    </div>

                    <div class="col-12 mt-2">
                        <label for="Email" class="col-form-label">Country<span class="text-danger">*</span></label>
                        <select class="form-select" name="CountryID" id="CountryID"
                                asp-items="@(new SelectList(DropdownFunctions.GetAllCountry(), "value", "text", "1"))">
                        </select>
                    </div>
                    <div class="col-12 mt-3">
                        <label for="ResumeFile" class="col-form-label">Upload Resume<span class="text-danger">*</span></label>
                        <input class="form-control" name="ResumeFile" id="ResumeFile" type="file" accept=".pdf, .doc, .docx, .txt">
                        <div class="mt-1">
                            <small>
                                (Supported format: .PDF, .DOC,.DOCX and .TXT)
                            </small>
                            <br />
                            <small>
                                (Maximum file size limit is 5 MBs)
                            </small>
                        </div>
                    </div>

                    <div class="col-12 mt-3">
                        <p>
                            Don't have a resume?  <a class="" href="javascript:void(0)" onclick="redirectToJobSeekerRegistration()">
                                Create an account
                            </a> to apply instead.
                        </p>
                    </div>

                    <div class="col-12 mt-3">
                        <button type="button" class="btn-secondary ladda-button" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn-primary me-3 ladda-button" id="btnQuickApply" data-style="slide-up">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{

    <script src="https://www.google.com/recaptcha/enterprise.js?render=@(siteKey)"></script>


    <script>
        $(function () {
            $.validator.addMethod('filesize', function (value, element, param) {
                return this.optional(element) || (element.files[0].size <= param)
            }, 'File size must be less than {0}');

            $("#frmQuickApply").validate({
                rules: {
                    FirstName: {
                        required: true,
                        maxlength: 50
                    },
                    LastName: {
                        required: true,
                        maxlength: 50
                    },
                    Email: {
                        required: true,
                        email: true,
                        maxlength: 128,
                        remote: '@Url.Action("IsEmailExist", "Base", new { flag = 2 })'
                    },
                    ResumeFile: {
                        required: true,
                        filesize: 5242880
                    },
                    CountryID: {
                        required: true
                    }
                },
                messages: {
                    FirstName: {
                        required: "First name is required. Please enter a first name.",
                        maxlength: "Maximum 50 chracters allowed."
                    },
                    LastName: {
                        required: "Last name is required. Please enter a last name.",
                        maxlength: "Maximum 50 chracters allowed."
                    },
                    Email: {
                        required: "Email is required. Please enter an email.",
                        email: "Enter a valid email address.",
                        maxlength: "Maximum 128 chracters allowed.",
                        remote: 'Email is already in used. Register with a different email address.'
                    },
                    ResumeFile: {
                        required: "Resume is required. Please select a resume.",
                        filesize: "Maximum 5 Mbs allowed."
                    },
                    CountryID: {
                        required: true
                    }
                },
                errorClass: 'is-invalid',
                errorElement: "div",
                errorPlacement: function (error, element) {
                    error.insertAfter($(element).parent());
                }
            });

            $('#btnQuickApply').on('click', function (e) {
                e.preventDefault();
                if ($("#frmQuickApply").valid()) {
                    var ladda = window.laddaStart('btnQuickApply');
                    grecaptcha.enterprise.ready(function () {
                        grecaptcha.enterprise.execute('@siteKey', { action: $('#googleCaptchaAction').val() }).then(function (token) {
                            $('#googleCaptcha').val(token);
                            $('#frmQuickApply').submit();
                        });
                    });
                }
            });
        });

        function quickApply() { 
            $('#mdQuickAppy').modal('show');
        }
    </script>
}